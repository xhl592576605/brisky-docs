"use strict";(self.webpackChunk_brisky_docs=self.webpackChunk_brisky_docs||[]).push([[269],{5958:(e,i,a)=>{a.r(i),a.d(i,{data:()=>l});const l={key:"v-dbee392c",path:"/Cli/vue-cli-plugin.html",title:"vue-cli-plugin",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"模板生成",slug:"模板生成",children:[]},{level:2,title:"编译扩展",slug:"编译扩展",children:[]}],filePathRelative:"Cli/vue-cli-plugin.md",git:{updatedTime:1630415417e3,contributors:[{name:"xhl592576605",email:"592576605@qq.com",commits:2},{name:"root",email:"root@raspbian",commits:1}]}}},5344:(e,i,a)=>{a.r(i),a.d(i,{default:()=>c});const l=(0,a(6252).uE)('<h1 id="vue-cli-plugin" tabindex="-1"><a class="header-anchor" href="#vue-cli-plugin" aria-hidden="true">#</a> vue-cli-plugin</h1><blockquote><p>插件按照brisky的特性扩展了vue-cli的打包,支持模板生成，多组件编译，性能优化，编译对比,mock机制</p></blockquote><h2 id="模板生成" tabindex="-1"><a class="header-anchor" href="#模板生成" aria-hidden="true">#</a> 模板生成</h2><p>因为使用了vue-cli的插件，增加了<code>generator</code>,一个普通的vue可以直接生成对应的brisky框架</p><h2 id="编译扩展" tabindex="-1"><a class="header-anchor" href="#编译扩展" aria-hidden="true">#</a> 编译扩展</h2><p>使用了<code>api.chainWebpack</code>来扩展webpack</p><p>#tip</p><blockquote><p>具体内容太多，不展开讲解，后续在views，admin项目会着重讲解如何使用，有兴趣直接看源码 具体内容太多，不展开讲解，后续在views，admin项目会着重讲解如何使用，有兴趣直接看源码</p></blockquote>',8),c={render:function(e,i){return l}}}}]);