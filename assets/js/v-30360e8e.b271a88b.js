"use strict";(self.webpackChunk_brisky_docs=self.webpackChunk_brisky_docs||[]).push([[958],{3821:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-30360e8e",path:"/EventBus/functions.html",title:"属性与方法",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"公共方法",slug:"公共方法",children:[{level:3,title:"$on",slug:"on",children:[]},{level:3,title:"$emit",slug:"emit",children:[]}]}],filePathRelative:"EventBus/functions.md",git:{updatedTime:1630206499e3,contributors:[{name:"xhl592576605",email:"592576605@qq.com",commits:1}]}}},728:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const p=(0,a(6252).uE)('<h1 id="属性与方法" tabindex="-1"><a class="header-anchor" href="#属性与方法" aria-hidden="true">#</a> 属性与方法</h1><h2 id="公共方法" tabindex="-1"><a class="header-anchor" href="#公共方法" aria-hidden="true">#</a> 公共方法</h2><h3 id="on" tabindex="-1"><a class="header-anchor" href="#on" aria-hidden="true">#</a> $on</h3><p>注册一个唯一key，以及对应一个或过个的回调函数，回调函数会按照添加顺序依次触发，可以多次调用，已存在便是增加回调</p><h4 id="入参" tabindex="-1"><a class="header-anchor" href="#入参" aria-hidden="true">#</a> 入参:</h4><ul><li>option：HookOption | string<br> 设置注册参数，若是字符串则是key，其余默认，可以传入详细对象HookOption进行设置</li><li>fn:fn: Function | Function[]<br> 注册的回调函数</li></ul><p>HookOption</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">BaseEventOption</span> <span class="token punctuation">{</span>\n  prefix<span class="token operator">?</span><span class="token operator">:</span> string<span class="token comment">// key的前缀，没有设置则默认</span>\n  suffix<span class="token operator">?</span><span class="token operator">:</span> string<span class="token comment">//key的后缀，没有设置则默认</span>\n  name<span class="token operator">:</span> string <span class="token comment">// key，若是异步方法，可以直接应该以’async.‘开头，以’async.**‘命名</span>\n  matchObject<span class="token operator">?</span><span class="token operator">:</span> Object <span class="token operator">|</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">//额外匹配信息，触发可以传入，以便精确触发</span>\n\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">HookOption</span> <span class="token keyword">extends</span> <span class="token class-name">BaseEventOption</span> <span class="token punctuation">{</span>\n  args<span class="token operator">:</span> Array<span class="token operator">&lt;</span>string<span class="token operator">&gt;</span> <span class="token operator">|</span> Number <span class="token comment">// 用于实例化参数个数，因为采用了tapable，回调函数的入参在此设置，若是没有设置，自动生成10个回调函数的入参</span>\n  callBack<span class="token operator">:</span> Function<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> Function <span class="token comment">// 回调函数，这个参数可以不设置，已$on的第二个参数fn为准</span>\n  hookType<span class="token operator">?</span><span class="token operator">:</span> TapableHookType <span class="token comment">// tapable的钩子类型，详情可以查看https://zhuanlan.zhihu.com/p/79221553</span>\n  interceptOpt<span class="token operator">?</span><span class="token operator">:</span> Object<span class="token punctuation">,</span> <span class="token comment">// 用于拦截器</span>\n  context<span class="token operator">?</span><span class="token operator">:</span> boolean <span class="token comment">//用于启用上下文，是直接配置在拦截器上，若是需要设置上下文的值，请在拦截器的拦截方法声明</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">enum</span> TapableHookType <span class="token punctuation">{</span>\n  Default<span class="token punctuation">,</span>\n  Bail<span class="token punctuation">,</span> <span class="token comment">// 返回undefined 不再执行</span>\n  Waterfall<span class="token punctuation">,</span> <span class="token comment">// 返回的值会带入到下个回调</span>\n  Loop <span class="token comment">// 返回非 undefined 时继续再次执行当前的回调。</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>例子：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>eventBusServie<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  eventBusServie<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token string">&#39;async.test1&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async.test1-setTimeout&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span>  <span class="token function-variable function">a</span><span class="token operator">=</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async.test1&#39;</span><span class="token punctuation">)</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async2.test1&#39;</span><span class="token punctuation">)</span>\n    <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async3.test1&#39;</span><span class="token punctuation">)</span>\n   \n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\neventBusServie<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    prefix<span class="token operator">:</span> <span class="token string">&#39;qwe&#39;</span><span class="token punctuation">,</span>\n    suffix<span class="token operator">:</span> <span class="token string">&#39;asdf&#39;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;Waterfall&#39;</span><span class="token punctuation">,</span>\n    hookType<span class="token operator">:</span> TapableHookType<span class="token punctuation">.</span>Waterfall\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;init&#39;</span><span class="token punctuation">)</span>\n    <span class="token keyword">return</span> <span class="token number">1</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\neventBusServie<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    prefix<span class="token operator">:</span> <span class="token string">&#39;qwe&#39;</span><span class="token punctuation">,</span>\n    suffix<span class="token operator">:</span> <span class="token string">&#39;asdf&#39;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;async.Waterfall&#39;</span><span class="token punctuation">,</span>\n    hookType<span class="token operator">:</span> TapableHookType<span class="token punctuation">.</span>Waterfall\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">c</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;init-async&#39;</span><span class="token punctuation">)</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>\n    <span class="token keyword">return</span> <span class="token number">2</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> c</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\neventBusServie<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    prefix<span class="token operator">:</span> <span class="token string">&#39;qwe&#39;</span><span class="token punctuation">,</span>\n    suffix<span class="token operator">:</span> <span class="token string">&#39;asdf&#39;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;async.Waterfall-match&#39;</span><span class="token punctuation">,</span>\n    hookType<span class="token operator">:</span> TapableHookType<span class="token punctuation">.</span>Waterfall<span class="token punctuation">,</span>\n    matchObject<span class="token operator">:</span> <span class="token punctuation">{</span>\n      a<span class="token operator">:</span> <span class="token number">1111</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">c</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;init-async-match&#39;</span><span class="token punctuation">)</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>\n    <span class="token keyword">return</span> <span class="token number">3</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> c</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br></div></div><h3 id="emit" tabindex="-1"><a class="header-anchor" href="#emit" aria-hidden="true">#</a> $emit</h3><p>触发事件，调用回调</p><h4 id="入参-1" tabindex="-1"><a class="header-anchor" href="#入参-1" aria-hidden="true">#</a> 入参:</h4><ul><li>option: BaseEventOption | string, 匹配key</li><li>...params: any[] 传递给回调函数的参数值</li></ul><h4 id="返回值" tabindex="-1"><a class="header-anchor" href="#返回值" aria-hidden="true">#</a> 返回值:</h4><ul><li>请求结果 promise</li></ul><p>例子：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>eventBusServie<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">await</span> eventBusServie<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;async.test1&#39;</span><span class="token punctuation">)</span>\n  \neventBusServie<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;Waterfall&#39;</span><span class="token punctuation">)</span>\n\neventBusServie<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;async.Waterfall&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span>\n\neventBusServie<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    matchObject<span class="token operator">:</span> <span class="token punctuation">{</span>\n      a<span class="token operator">:</span> <span class="token number">1111</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>',18),t={render:function(n,s){return p}}}}]);