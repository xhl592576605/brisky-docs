(self.webpackChunk_brisky_docs=self.webpackChunk_brisky_docs||[]).push([[614],{8709:(e,a,i)=>{"use strict";i.r(a),i.d(a,{data:()=>r});const r={key:"v-f644ca56",path:"/Core/functions.html",title:"属性与方法",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"公共属性",slug:"公共属性",children:[{level:3,title:"version",slug:"version",children:[]},{level:3,title:"app",slug:"app",children:[]},{level:3,title:"appOpts",slug:"appopts",children:[]},{level:3,title:"$el",slug:"el",children:[]},{level:3,title:"$vm",slug:"vm",children:[]},{level:3,title:"$store",slug:"store",children:[]},{level:3,title:"$router",slug:"router",children:[]},{level:3,title:"$eventServcie",slug:"eventservcie",children:[]},{level:3,title:"$apiService",slug:"apiservice",children:[]},{level:3,title:"$lifeCycle",slug:"lifecycle",children:[]},{level:3,title:"$plugins",slug:"plugins",children:[]},{level:3,title:"$frame,$system,menu,meta等等动态属性",slug:"frame-system-menu-meta等等动态属性",children:[]}]},{level:2,title:"公共方法",slug:"公共方法",children:[{level:3,title:"login",slug:"login",children:[]},{level:3,title:"loginout",slug:"loginout",children:[]},{level:3,title:"defineDynamicProxy",slug:"definedynamicproxy",children:[]},{level:3,title:"definedDynamicProxy",slug:"defineddynamicproxy",children:[]},{level:3,title:"loadComponent",slug:"loadcomponent",children:[]}]}],filePathRelative:"Core/functions.md",git:{updatedTime:null,contributors:[]}}},7809:(e,a,i)=>{"use strict";i.r(a),i.d(a,{default:()=>l});const r=(0,i(6252).uE)('<h1 id="属性与方法" tabindex="-1"><a class="header-anchor" href="#属性与方法" aria-hidden="true">#</a> 属性与方法</h1><h2 id="公共属性" tabindex="-1"><a class="header-anchor" href="#公共属性" aria-hidden="true">#</a> 公共属性</h2><h3 id="version" tabindex="-1"><a class="header-anchor" href="#version" aria-hidden="true">#</a> version</h3><p>core的版本号</p><h3 id="app" tabindex="-1"><a class="header-anchor" href="#app" aria-hidden="true">#</a> app</h3><p>layout组件</p><h3 id="appopts" tabindex="-1"><a class="header-anchor" href="#appopts" aria-hidden="true">#</a> appOpts</h3><p>createApp的option</p><h3 id="el" tabindex="-1"><a class="header-anchor" href="#el" aria-hidden="true">#</a> $el</h3><p>挂载在那个元素下</p><h3 id="vm" tabindex="-1"><a class="header-anchor" href="#vm" aria-hidden="true">#</a> $vm</h3><p>createApp返回的vue对象</p><h3 id="store" tabindex="-1"><a class="header-anchor" href="#store" aria-hidden="true">#</a> $store</h3><p>状态管理</p><h3 id="router" tabindex="-1"><a class="header-anchor" href="#router" aria-hidden="true">#</a> $router</h3><p>路由</p><h3 id="eventservcie" tabindex="-1"><a class="header-anchor" href="#eventservcie" aria-hidden="true">#</a> $eventServcie</h3><p>事件服务（事件总线）</p><h3 id="apiservice" tabindex="-1"><a class="header-anchor" href="#apiservice" aria-hidden="true">#</a> $apiService</h3><p>api请求服务</p><h3 id="lifecycle" tabindex="-1"><a class="header-anchor" href="#lifecycle" aria-hidden="true">#</a> $lifeCycle</h3><p>生命周期信息</p><h3 id="plugins" tabindex="-1"><a class="header-anchor" href="#plugins" aria-hidden="true">#</a> $plugins</h3><p>brisky插件信息</p><h3 id="frame-system-menu-meta等等动态属性" tabindex="-1"><a class="header-anchor" href="#frame-system-menu-meta等等动态属性" aria-hidden="true">#</a> $frame,$system,menu,meta等等动态属性</h3><p>动态属性是由<code>defineDynamicProxy</code>方法定义，方法说明查看下方</p><h2 id="公共方法" tabindex="-1"><a class="header-anchor" href="#公共方法" aria-hidden="true">#</a> 公共方法</h2><h3 id="login" tabindex="-1"><a class="header-anchor" href="#login" aria-hidden="true">#</a> login</h3><p>登录函数，会触发登录生命周期，自动将token存储</p><h4 id="入参" tabindex="-1"><a class="header-anchor" href="#入参" aria-hidden="true">#</a> 入参:</h4><ul><li>data<br> login接口的对象，账户，密码等</li></ul><h3 id="loginout" tabindex="-1"><a class="header-anchor" href="#loginout" aria-hidden="true">#</a> loginout</h3><p>登出函数，会触发登出生命周期，自动将token，user，menu等信息清除</p><h4 id="入参-1" tabindex="-1"><a class="header-anchor" href="#入参-1" aria-hidden="true">#</a> 入参:</h4><ul><li>status<br> 用来匹配具体啥原因登出系统</li></ul><h4 id="返回值" tabindex="-1"><a class="header-anchor" href="#返回值" aria-hidden="true">#</a> 返回值:</h4><ul><li>请求结果 promise</li></ul><h3 id="definedynamicproxy" tabindex="-1"><a class="header-anchor" href="#definedynamicproxy" aria-hidden="true">#</a> defineDynamicProxy</h3><p>定义动态属性，并挂载<code>$core</code>对象，动态属性是一个<code>ref</code>值，也就是说是一个响应的数据</p><h4 id="入参-2" tabindex="-1"><a class="header-anchor" href="#入参-2" aria-hidden="true">#</a> 入参:</h4><ul><li>prop<br> 属性key值</li><li>value<br> 初始化值</li><li>isReadonly<br> 是否只读</li></ul><h3 id="defineddynamicproxy" tabindex="-1"><a class="header-anchor" href="#defineddynamicproxy" aria-hidden="true">#</a> definedDynamicProxy</h3><p>查看所有定义的动态属性</p><h3 id="loadcomponent" tabindex="-1"><a class="header-anchor" href="#loadcomponent" aria-hidden="true">#</a> loadComponent</h3><p>加载组件，支持加载别名的组件</p><h4 id="入参-3" tabindex="-1"><a class="header-anchor" href="#入参-3" aria-hidden="true">#</a> 入参:</h4><ul><li>compKey<br> 若不是js后缀，默认是别名池</li><li>configKey<br> 传递到组件的prop值，可以直接一个对象，也可以是一个js，json地址（必须要返回对象）</li><li>option<br> defineAsyncComponent的部分属性值</li></ul>',47),l={render:function(e,a){return r}}}}]);