"use strict";(self.webpackChunk_brisky_docs=self.webpackChunk_brisky_docs||[]).push([[16],{2615:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-32b41a07",path:"/EventBus/quick-start.html",title:"基础",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"快速开始",slug:"快速开始",children:[{level:3,title:"安装",slug:"安装",children:[]},{level:3,title:"实例化与调用",slug:"实例化与调用",children:[]}]},{level:2,title:"依赖",slug:"依赖",children:[]}],filePathRelative:"EventBus/quick-start.md",git:{updatedTime:1630206499e3,contributors:[{name:"xhl592576605",email:"592576605@qq.com",commits:1}]}}},1088:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const e=(0,a(6252).uE)('<h1 id="基础" tabindex="-1"><a class="header-anchor" href="#基础" aria-hidden="true">#</a> 基础</h1><blockquote><p>以&quot;tapble&quot;,支持aysnc，await的事件总线，brisky生命周期的底层机制</p></blockquote><h2 id="快速开始" tabindex="-1"><a class="header-anchor" href="#快速开始" aria-hidden="true">#</a> 快速开始</h2><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 最新稳定版</span>\n$ <span class="token function">npm</span> <span class="token function">install</span> @brisky/eventbus\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="实例化与调用" tabindex="-1"><a class="header-anchor" href="#实例化与调用" aria-hidden="true">#</a> 实例化与调用</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>EventBusService<span class="token punctuation">}</span> from ‘@brisky<span class="token operator">/</span>eventbus‘\n<span class="token keyword">const</span> eventBusServie <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EventBusService</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token comment">//监听一个回调函数</span>\neventBusServie<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token string">&#39;test1&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;test1&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">// 触发该回调函数</span>\neventBusServie<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;test1&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">//监听一个异步回调函数</span>\neventBusServie<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token string">&#39;async.test1&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async.test1&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">// 触发该回调函数</span>\n<span class="token keyword">await</span> eventBusServie<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;async.test1&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="依赖" tabindex="-1"><a class="header-anchor" href="#依赖" aria-hidden="true">#</a> 依赖</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> i lodash\n<span class="token function">npm</span> i @brisky/util\n<span class="token function">npm</span> i tapable\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',9),t={render:function(n,s){return e}}}}]);