"use strict";(self.webpackChunk_brisky_docs=self.webpackChunk_brisky_docs||[]).push([[795],{6794:(s,n,a)=>{a.r(n),a.d(n,{data:()=>p});const p={key:"v-1135bf9a",path:"/ApiService/api.html",title:"api配置说明",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"ApiService/api.md",git:{updatedTime:1630206499e3,contributors:[{name:"xhl592576605",email:"592576605@qq.com",commits:1}]}}},9967:(s,n,a)=>{a.r(n),a.d(n,{default:()=>t});const p=(0,a(6252).uE)('<h1 id="api配置说明" tabindex="-1"><a class="header-anchor" href="#api配置说明" aria-hidden="true">#</a> api配置说明</h1><p>配置以一个对象存储，便于分组，请求时，传递key来指定某个请求，key值的规范便是对象字段的组成，如<code>system.login</code></p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;system&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n     <span class="token property">&quot;login&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">&quot;remark&quot;</span><span class="token operator">:</span> <span class="token string">&quot;接口备注&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token string">&quot;接口作者&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;method&quot;</span><span class="token operator">:</span> <span class="token string">&quot;请求方式get|post&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;接口路径&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;baseURL&quot;</span><span class="token operator">:</span><span class="token string">&quot;若是第三方请求，url是完整的，baseURL可以设置为&#39;&#39;&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;params&quot;</span><span class="token operator">:</span> <span class="token string">&quot;url参数，是一个对象&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;data&quot;</span><span class="token operator">:</span><span class="token string">&quot;body参数，可以是一个对象，也可以是数组&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;certificate&quot;</span><span class="token operator">:</span><span class="token string">&quot;certificate为true才会头部带入token&quot;</span>\n         <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>',3),t={render:function(s,n){return p}}}}]);