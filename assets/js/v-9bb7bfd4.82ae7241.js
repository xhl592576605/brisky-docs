(self.webpackChunk_brisky_docs=self.webpackChunk_brisky_docs||[]).push([[602],{229:(n,a,s)=>{"use strict";s.r(a),s.d(a,{data:()=>e});const e={key:"v-9bb7bfd4",path:"/ApiService/options.html",title:"实例化参数",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"debug",slug:"debug",children:[]},{level:2,title:"api",slug:"api",children:[]},{level:2,title:"tokenKey",slug:"tokenkey",children:[]},{level:2,title:"getToken",slug:"gettoken",children:[]},{level:2,title:"axiosOpt",slug:"axiosopt",children:[]},{level:2,title:"beforeSetRequestHeaders",slug:"beforesetrequestheaders",children:[]},{level:2,title:"afterSetRequestHeaders",slug:"aftersetrequestheaders",children:[]}],filePathRelative:"ApiService/options.md",git:{updatedTime:1624983302e3,contributors:[{name:"xhl592576605",email:"592576605@qq.com",commits:2}]}}},9212:(n,a,s)=>{"use strict";s.r(a),s.d(a,{default:()=>m});var e=s(6252);const t=(0,e.uE)('<h1 id="实例化参数" tabindex="-1"><a class="header-anchor" href="#实例化参数" aria-hidden="true">#</a> 实例化参数</h1><p>ApiService是类库的服务，使用需先要实例化，实例化需要传递一个对象</p><h2 id="debug" tabindex="-1"><a class="header-anchor" href="#debug" aria-hidden="true">#</a> debug</h2><p>default:false</p><p>这个仅是一个调试参数，请求时会将<code>debug=true</code>带入请求，作为url参数，并打印请求参数</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>option<span class="token punctuation">.</span>debug<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      opt<span class="token punctuation">.</span>params<span class="token punctuation">.</span>debug <span class="token operator">=</span> <span class="token boolean">true</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>apiChainKey<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">请求参数</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> opt<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="api" tabindex="-1"><a class="header-anchor" href="#api" aria-hidden="true">#</a> api</h2><p>require：true<br> type:string|Object</p>',8),p=(0,e.Uk)("api是请求配置信息，可以是一个路径（路径应该返回一个对象），或者一个对象，详细信息请看 "),o=(0,e.Uk)("Api"),r=(0,e.uE)('<p>例子</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;system&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n     <span class="token property">&quot;login&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">&quot;remark&quot;</span><span class="token operator">:</span> <span class="token string">&quot;login api&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token string">&quot;author&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;method&quot;</span><span class="token operator">:</span> <span class="token string">&quot;get&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/api/v1/login&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;params&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;data&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span>\n         <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="tokenkey" tabindex="-1"><a class="header-anchor" href="#tokenkey" aria-hidden="true">#</a> tokenKey</h2><p>default:null<br> type:string|null <code>tokenKey</code>是配置Cookie获取token的，与下面的<code>getToken</code>互斥，<code>tokenKey</code>优先级高，若是2个都没有设置，默认取<code>Bearer_Token</code></p><h2 id="gettoken" tabindex="-1"><a class="header-anchor" href="#gettoken" aria-hidden="true">#</a> getToken</h2><p>default:null<br> type：() =&gt; string | null <code>getToken</code>是配置函数获取token的，与下面的<code>getToken</code>互斥，若是2个都没有设置，默认取<code>Bearer_Token</code></p><h2 id="axiosopt" tabindex="-1"><a class="header-anchor" href="#axiosopt" aria-hidden="true">#</a> axiosOpt</h2>',7),l=(0,e.Uk)("default：null"),u=(0,e.Wm)("br",null,null,-1),c=(0,e.Uk)(" type:Object | null"),i=(0,e.Wm)("br",null,null,-1),d=(0,e.Wm)("code",null,"axiosOpt",-1),k=(0,e.Uk)("为axios的参数，具体参考"),b={href:"http://www.axios-js.com/zh-cn/docs/",target:"_blank",rel:"noopener noreferrer"},h=(0,e.Uk)("axios"),g=(0,e.uE)('<h2 id="beforesetrequestheaders" tabindex="-1"><a class="header-anchor" href="#beforesetrequestheaders" aria-hidden="true">#</a> beforeSetRequestHeaders</h2><p>default:null<br> type:(config: any) =&gt; void | null<br> 设置头部信息之前调用，可以而外设置想要的参数</p><h2 id="aftersetrequestheaders" tabindex="-1"><a class="header-anchor" href="#aftersetrequestheaders" aria-hidden="true">#</a> afterSetRequestHeaders</h2><p>default:null<br> type:(config: any) =&gt; void | null<br> 设置头部信息之后调用，可以而外设置想要的参数</p>',4),m={render:function(n,a){const s=(0,e.up)("RouterLink"),m=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[t,(0,e.Wm)("p",null,[p,(0,e.Wm)(s,{to:"/ApiService/api.html"},{default:(0,e.w5)((()=>[o])),_:1})]),r,(0,e.Wm)("p",null,[l,u,c,i,d,k,(0,e.Wm)("a",b,[h,(0,e.Wm)(m)])]),g],64)}}}}]);