(self.webpackChunk_brisky_docs=self.webpackChunk_brisky_docs||[]).push([[746],{5755:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>e});const e={key:"v-08ac9ee4",path:"/Core/quick-start.html",title:"基础",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"快速开始",slug:"快速开始",children:[{level:3,title:"安装",slug:"安装",children:[]},{level:3,title:"调用",slug:"调用",children:[]}]},{level:2,title:"依赖",slug:"依赖",children:[]}],filePathRelative:"Core/quick-start.md",git:{updatedTime:1625408622e3,contributors:[{name:"xhl592576605",email:"592576605@qq.com",commits:1}]}}},7625:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>i});const e=(0,a(6252).uE)('<h1 id="基础" tabindex="-1"><a class="header-anchor" href="#基础" aria-hidden="true">#</a> 基础</h1><blockquote><p>brisky的核心，一套生命周期，可扩展的插件，一个可定制化的vueApp</p></blockquote><p>core是整个brisky，它承担的就是创建vue，并且他而外扩展的生命周期，不仅仅限于vue的生命周期，你完全可以做这类生命周期做想要做的事情，比如获取菜单等等，当然我们也集成了这些基础的内容，像登录，获取用户信息，获取菜单，根据菜单构建动态路由，可以完整构建一个web，你完全可以直接考虑业务，无需要考虑底层</p><h2 id="快速开始" tabindex="-1"><a class="header-anchor" href="#快速开始" aria-hidden="true">#</a> 快速开始</h2><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 最新稳定版</span>\n$ <span class="token function">npm</span> <span class="token function">install</span> @brisky/core\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="调用" tabindex="-1"><a class="header-anchor" href="#调用" aria-hidden="true">#</a> 调用</h3><p>直接使用init变可以初始化一个vueApp</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>   $core<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>效果 <img src="/brisky-docs/images/CoreBase.png" alt="CoreBase"></p><h2 id="依赖" tabindex="-1"><a class="header-anchor" href="#依赖" aria-hidden="true">#</a> 依赖</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> i lodash\n<span class="token function">npm</span> i @brisky/api\n<span class="token function">npm</span> i @brisky/eventbus\n<span class="token function">npm</span> i @brisky/util\n<span class="token function">npm</span> i crypto-js\n<span class="token function">npm</span> i js-cookie\n<span class="token function">npm</span> i query-string\n<span class="token function">npm</span> i requirejs\n<span class="token function">npm</span> i vue@next\n<span class="token function">npm</span> i vue-router@next\n<span class="token function">npm</span> i vuex@next\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>',12),i={render:function(n,s){return e}}}}]);